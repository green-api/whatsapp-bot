const Telegraf = require('../src/telegraf')
const session = require('../src/session')
const Stage = require('../src/stage')
const Scene = require( '../src/scenes/base')
const data = require('./credentials')

const stage = new Stage()
const bot = new Telegraf({
  idInstance: data.idInstance,
  apiTokenInstance: data.apiTokenInstance
})

const getName = new Scene('getName')
stage.register(getName)
const getYear = new Scene('getYear')
stage.register(getYear)
const getEduc = new Scene('getEduc')
stage.register(getEduc)
const getNumber = new Scene('getNumber')
stage.register(getNumber)
const check = new Scene('check')
stage.register(check)

bot.use(session())
bot.use(stage.middleware())

bot.hears([1, 'Ô∏è–ù–∞ –≥–ª–∞–≤–Ω—É—é'], (ctx) => {
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  ctx.scene.enter('getName')
})

bot.start((ctx) => {
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  ctx.scene.enter('getName')
})

bot.hears(/w*/, (ctx) => {
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  ctx.scene.enter('getName')
})

getName.command('start', async (ctx) => {
  ctx.reply(
    '–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ',
    { reply_markup: { remove_keyboard: true } }
  )
  await ctx.scene.leave('getEduc')
  ctx.scene.enter('getName')
})

getName.on('text', async (ctx) => {
  if (ctx.message.text === '1') { //'1 –ù–∞–∑–∞–¥'
    return ctx.reply('–í—ã —É–∂–µ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ. –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–µ –∏–º—è')
  }

  ctx.session.name = ctx.message.text
  ctx.reply(
    '–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è' +
    `\n\n–£–∂–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–§.–ò.–û: ${ctx.session.name}`,
    { reply_markup: { keyboard: [['‚óÄÔ∏è1. –ù–∞–∑–∞–¥']]} }
    )
  await ctx.scene.leave('getName')
  ctx.scene.enter('getYear')
})

getYear.hears(/^[0-9]{4}$/, async (ctx) => {
  ctx.session.year = ctx.message.text
  ctx.reply(
    '–ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏. –í –∫–∞–∫–æ–º –≤—É–∑–µ –í—ã —É—á–∏–ª–∏—Å—å –∏ –Ω–∞ –∫–∞–∫–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ?' +
    `\n\n–£–∂–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–§.–ò.–û: ${ctx.session.name};\n–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: ${ctx.session.year}`,
    { reply_markup: { keyboard: [['‚óÄÔ∏è1. –ù–∞–∑–∞–¥', '‚ùå2. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']]} }
  )
  await ctx.scene.leave('getYear')
  ctx.scene.enter('getEduc')
})


getYear.hears(['1', '1. –ù–∞–∑–∞–¥'], async (ctx) => {
    ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
    await ctx.scene.leave('getYear')
    ctx.scene.enter('getName')
  }
)

getYear.hears(['2', '2. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ'], async (ctx) => {
  ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  await ctx.scene.leave('getYear')
  ctx.scene.enter('getName')
}
)

getYear.on('text', async (ctx) => {
  ctx.reply(
    '–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 1990' +
    `\n\n–£–∂–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–§.–ò.–û: ${ctx.session.name}`,
    { reply_markup: { keyboard: [['‚óÄÔ∏è1. –ù–∞–∑–∞–¥', '‚ùå2. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']] } }
  )
})

getEduc.hears(['1', '1. –ù–∞–∑–∞–¥'], async (ctx) => {
    ctx.reply(
      '–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è' +
      `\n\n–£–∂–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–§.–ò.–û: ${ctx.session.name}`,
      { reply_markup: { keyboard: [['‚óÄÔ∏è1. –ù–∞–∑–∞–¥', '‚ùå2. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']] }}
    )
    await ctx.scene.leave('getEduc')
    ctx.scene.enter('getYear')
})

getEduc.hears(['2', '2. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ', '/start'], async (ctx) => {
    ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
    await ctx.scene.leave('getEduc')
    ctx.scene.enter('getName')
})

getEduc.on('text', async (ctx) => {
  ctx.session.educ = ctx.message.text
  ctx.reply(
    '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç" –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º.' +
    `\n\n–£–∂–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–§.–ò.–û: ${ctx.session.name};\n–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: ${ctx.session.year};\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: ${ctx.session.educ};`,
    { reply_markup: { keyboard: [['üì±1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç', '‚óÄÔ∏è2. –ù–∞–∑–∞–¥', '‚ùå3. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']] } }
  )
  await ctx.scene.leave('getEduc')
  ctx.scene.enter('getNumber')
})


getNumber.hears(['2', '2. –ù–∞–∑–∞–¥'], async (ctx) => {
  ctx.reply(
    '–ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏. –í –∫–∞–∫–æ–º –≤—É–∑–µ –í—ã —É—á–∏–ª–∏—Å—å –∏ –Ω–∞ –∫–∞–∫–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ?' +
    `\n\n–£–∂–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–§.–ò.–û: ${ctx.session.name};\n–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: ${ctx.session.year}`,
    { reply_markup: { keyboard: [['‚óÄÔ∏è1. –ù–∞–∑–∞–¥', '‚ùå2. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']]} }
  )
  await ctx.scene.leave('getNumber')
  ctx.scene.enter('getEduc')
})

getNumber.hears(['3', '3. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ', '/start'], async (ctx) => {
  ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ',     { reply_markup: { remove_keyboard: true } }   )
  await ctx.scene.leave('getNumber')
  ctx.scene.enter('getName')
  ctx.session = null
})

getNumber.hears(['1', '1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç'], async (ctx) => {
  ctx.session.phone = ctx.message.chat.id.split('@')[0]
  ctx.reply(
    '‚ùóÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞–∂–º–∏—Ç–µ "–í—Å–µ –≤–µ—Ä–Ω–æ", –µ—Å–ª–∏ –æ–Ω–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã: ' + 
    `\n\n–§.–ò.–û: ${ctx.session.name};\n–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: ${ctx.session.year};\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: ${ctx.session.educ};` + 
    `\n–ù–æ–º–µ—Ä: ${ctx.session.phone}`,
    { reply_markup: { keyboard: [['Ô∏è‚úÖ1. –í—Å–µ –≤–µ—Ä–Ω–æ'], ['‚óÄÔ∏è2. –ù–∞–∑–∞–¥', '‚ùå3. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']]}}
  )
  await ctx.scene.leave('getNumber')
  ctx.scene.enter('check')
})


check.hears(['1', '‚úÖ1. –í—Å–µ –≤–µ—Ä–Ω–æ'], (ctx) => {
  ctx.reply('‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã –í–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º.', { reply_markup: { keyboard: [['Ô∏è‚¨ÖÔ∏è1. –ù–∞ –≥–ª–∞–≤–Ω—É—é']] } }
  )
  ctx.scene.leave('main')

  console.log(`–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞! \n\n–§.–ò.–û: [${ctx.session.name}](tg://user?id=${ctx.from.id});\n–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: ${ctx.session.year};\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: ${ctx.session.educ};` + 
    `\n–ù–æ–º–µ—Ä: ${ctx.session.phone}`)
  
  ctx.session = null
})

check.hears(['2', '‚óÄÔ∏è –ù–∞–∑–∞–¥'], async (ctx) => {
  ctx.reply(
    '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç" –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º.' +
    `\n\n–£–∂–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–§.–ò.–û: ${ctx.session.name};\n–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: ${ctx.session.year};\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: ${ctx.session.educ};` +
    `\n–¢–µ–º–∞ –¥–∏–ø–ª–æ–º–∞: ${ctx.session.theme};\n–Ø–∑—ã–∫–∏: ${ctx.session.langs};\n–í–ª–∞–¥–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º: ${ctx.session.compSkills}`,
    { reply_markup: { keyboard: [[{text: 'üì±1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç'}], ['‚óÄÔ∏è2. –ù–∞–∑–∞–¥', '‚ùå3. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']]} }
  )
  await ctx.scene.leave('check')
  ctx.scene.enter('getNumber')
})

check.hears(['3', '‚ùå3. –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ', '/start'], async (ctx) => {
  ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  await ctx.scene.leave('getNumber')
  ctx.scene.enter('getCompSkills')
  ctx.session = null
})


bot.startPolling()